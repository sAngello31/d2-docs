atm_system: |md
  ## ATM Banking System
  [Software System]

  Allows customers to perform financial transactions via physical terminals.
| {
  shape: rectangle
  style.fill: "#87CEEB"
  class: [hardware-interface; customer-facing; transaction-processing]
}

fraud_detection: |md
  ## Fraud Detection System
  [Software System]

  Monitors transactions for suspicious activity using ML algorithms.
| {
  shape: hexagon
  style.stroke-width: 2
  style.stroke: "#FF0000"
  class: [security; machine-learning; transaction-processing]
}

customer_service: |md
  ## Customer Service Portal
  [Software System]

  Tools for customer service representatives to assist clients.
| {
  shape: c4-person
  style.fill: "#98FB98"
  class: [staff-facing; web-portal; support]
}

notification_system: |md
  ## Notification System
  [Container: Java]

  Sends alerts and notifications to customers via multiple channels.
| {
  shape: rectangle
  style.stroke-dash: 5
  class: [java; customer-facing; communication]
}

payment_gateway: |md
  ## Payment Gateway
  [Container: Python & Django]

  Processes payments and interfaces with external payment networks.
| {
  shape: diamond
  style.fill: "#FFD700"
  class: [python; transaction-processing; external-interface]
}

backup_system: |md
  ## Backup System
  [Container: Azure Cloud Storage]

  Automated backup of critical banking data.
| {
  shape: cylinder
  style.fill: "#D3D3D3"
  class: [cloud; data-storage; infrastructure]
}

admin_portal: |md
  ## Administrative Portal
  [Container: React]

  Administrative interface for system maintenance and user management.
| {
  shape: rectangle
  style.stroke-width: 3
  class: [web-portal; staff-facing; javascript]
}

security_system: |md
  ## Security System
  [Software System]

  Manages authentication, authorization, and security policies.
| {
  shape: hexagon
  style.fill: "#F08080"
  class: [security; infrastructure; core-banking]
}

reporting_engine: |md
  ## Reporting Engine
  [Container: Python & Pandas]

  Generates reports and analytics for internal stakeholders.
| {
  shape: rectangle
  style.3d: true
  class: [python; analytics; staff-facing]
}

logging_service: |md
  ## Logging Service
  [Container: ELK Stack]

  Centralized logging for auditing and debugging purposes.
| {
  shape: parallelogram
  style.fill: "#FFDAB9"
  class: [infrastructure; monitoring; security]
}

compliance_system: |md
  ## Compliance System
  [Software System]

  Ensures banking activities comply with regulations.
| {
  shape: hexagon
  style.fill: "#E6E6FA"
  class: [legal; core-banking; monitoring]
}

chatbot: |md
  ## Customer Chatbot
  [Container: Node.js & NLP]

  AI-powered chat interface for customer support.
| {
  shape: c4-person
  style.fill: "#B0E0E6"
  class: [javascript; customer-facing; machine-learning]
}

kyc_system: |md
  ## KYC Verification
  [Software System]

  Know Your Customer identity verification process.
| {
  shape: c4-person
  style.stroke: "#800080"
  class: [legal; security; customer-facing]
}

loan_processor: |md
  ## Loan Processing System
  [Container: Java EE]

  Handles loan applications and approval workflows.
| {
  shape: rectangle
  style.fill: "#FFFACD"
  class: [java; core-banking; workflow]
}

investment_platform: |md
  ## Investment Platform
  [Software System]

  Provides trading and investment capabilities to customers.
| {
  shape: parallelogram
  style.fill: "#90EE90"
  class: [financial-services; customer-facing; transaction-processing]
}

account_manager: |md
  ## Account Management
  [Container: Java & Spring Boot]

  Core functions for creating and managing customer accounts.
| {
  shape: rectangle
  style.double-border: true
  class: [java; core-banking; data-storage]
}

bill_payment: |md
  ## Bill Payment Service
  [Container: Node.js]

  Allows customers to schedule and pay bills electronically.
| {
  shape: rectangle
  style.fill: "#F0F8FF"
  class: [javascript; customer-facing; transaction-processing]
}

transaction_processor: |md
  ## Transaction Processor
  [Container: Scala]

  High-performance engine for processing financial transactions.
| {
  shape: oval
  style.fill: "#FAFAD2"
  class: [jvm; transaction-processing; core-banking]
}

data_warehouse: |md
  ## Data Warehouse
  [Container: Snowflake]

  Enterprise data repository for analytics and business intelligence.
| {
  shape: cylinder
  style.multiple: true
  class: [data-storage; analytics; cloud]
}

mobile_banking_api: |md
  ## Mobile Banking API
  [Container: GraphQL & Node.js]

  API gateway specifically optimized for mobile client applications.
| {
  shape: rectangle
  style.fill: "#87CEEB"
  class: [javascript; customer-facing; api]
}
